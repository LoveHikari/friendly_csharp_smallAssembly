#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBUtility
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database")]
	public partial class AppDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertDataBaseConfig(Models.DataBaseConfig instance);
    partial void UpdateDataBaseConfig(Models.DataBaseConfig instance);
    partial void DeleteDataBaseConfig(Models.DataBaseConfig instance);
    partial void InsertNamespaceConfig(Models.NamespaceConfig instance);
    partial void UpdateNamespaceConfig(Models.NamespaceConfig instance);
    partial void DeleteNamespaceConfig(Models.NamespaceConfig instance);
    #endregion
		
		public AppDataContext() : 
				base(global::DBUtility.Properties.Settings.Default.DatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AppDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Models.DataBaseConfig> DataBaseConfig
		{
			get
			{
				return this.GetTable<Models.DataBaseConfig>();
			}
		}
		
		public System.Data.Linq.Table<Models.NamespaceConfig> NamespaceConfig
		{
			get
			{
				return this.GetTable<Models.NamespaceConfig>();
			}
		}
	}
}
namespace Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.dataBaseConfig")]
	public partial class DataBaseConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ConnStr;
		
		private string _DatabaseName;
		
		private string _ProviderName;
		
		private string _ServerName;
		
		private string _Uid;
		
		private string _Pwd;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnConnStrChanging(string value);
    partial void OnConnStrChanged();
    partial void OnDatabaseNameChanging(string value);
    partial void OnDatabaseNameChanged();
    partial void OnProviderNameChanging(string value);
    partial void OnProviderNameChanged();
    partial void OnServerNameChanging(string value);
    partial void OnServerNameChanged();
    partial void OnUidChanging(string value);
    partial void OnUidChanged();
    partial void OnPwdChanging(string value);
    partial void OnPwdChanged();
    #endregion
		
		public DataBaseConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnStr", DbType="NVarChar(500)")]
		public string ConnStr
		{
			get
			{
				return this._ConnStr;
			}
			set
			{
				if ((this._ConnStr != value))
				{
					this.OnConnStrChanging(value);
					this.SendPropertyChanging();
					this._ConnStr = value;
					this.SendPropertyChanged("ConnStr");
					this.OnConnStrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseName", DbType="NVarChar(255)")]
		public string DatabaseName
		{
			get
			{
				return this._DatabaseName;
			}
			set
			{
				if ((this._DatabaseName != value))
				{
					this.OnDatabaseNameChanging(value);
					this.SendPropertyChanging();
					this._DatabaseName = value;
					this.SendPropertyChanged("DatabaseName");
					this.OnDatabaseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProviderName", DbType="NVarChar(50)")]
		public string ProviderName
		{
			get
			{
				return this._ProviderName;
			}
			set
			{
				if ((this._ProviderName != value))
				{
					this.OnProviderNameChanging(value);
					this.SendPropertyChanging();
					this._ProviderName = value;
					this.SendPropertyChanged("ProviderName");
					this.OnProviderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerName", DbType="NVarChar(255)")]
		public string ServerName
		{
			get
			{
				return this._ServerName;
			}
			set
			{
				if ((this._ServerName != value))
				{
					this.OnServerNameChanging(value);
					this.SendPropertyChanging();
					this._ServerName = value;
					this.SendPropertyChanged("ServerName");
					this.OnServerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uid", DbType="NVarChar(50)")]
		public string Uid
		{
			get
			{
				return this._Uid;
			}
			set
			{
				if ((this._Uid != value))
				{
					this.OnUidChanging(value);
					this.SendPropertyChanging();
					this._Uid = value;
					this.SendPropertyChanged("Uid");
					this.OnUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pwd", DbType="NVarChar(255)")]
		public string Pwd
		{
			get
			{
				return this._Pwd;
			}
			set
			{
				if ((this._Pwd != value))
				{
					this.OnPwdChanging(value);
					this.SendPropertyChanging();
					this._Pwd = value;
					this.SendPropertyChanged("Pwd");
					this.OnPwdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.namespaceConfig")]
	public partial class NamespaceConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ModelPath;
		
		private string _DalPath;
		
		private string _BllPath;
		
		private string _ModelSuffix;
		
		private string _DalSuffix;
		
		private string _BllSuffix;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnModelPathChanging(string value);
    partial void OnModelPathChanged();
    partial void OnDalPathChanging(string value);
    partial void OnDalPathChanged();
    partial void OnBllPathChanging(string value);
    partial void OnBllPathChanged();
    partial void OnModelSuffixChanging(string value);
    partial void OnModelSuffixChanged();
    partial void OnDalSuffixChanging(string value);
    partial void OnDalSuffixChanged();
    partial void OnBllSuffixChanging(string value);
    partial void OnBllSuffixChanged();
    #endregion
		
		public NamespaceConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelPath", DbType="NVarChar(50)")]
		public string ModelPath
		{
			get
			{
				return this._ModelPath;
			}
			set
			{
				if ((this._ModelPath != value))
				{
					this.OnModelPathChanging(value);
					this.SendPropertyChanging();
					this._ModelPath = value;
					this.SendPropertyChanged("ModelPath");
					this.OnModelPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DalPath", DbType="NVarChar(50)")]
		public string DalPath
		{
			get
			{
				return this._DalPath;
			}
			set
			{
				if ((this._DalPath != value))
				{
					this.OnDalPathChanging(value);
					this.SendPropertyChanging();
					this._DalPath = value;
					this.SendPropertyChanged("DalPath");
					this.OnDalPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BllPath", DbType="NVarChar(50)")]
		public string BllPath
		{
			get
			{
				return this._BllPath;
			}
			set
			{
				if ((this._BllPath != value))
				{
					this.OnBllPathChanging(value);
					this.SendPropertyChanging();
					this._BllPath = value;
					this.SendPropertyChanged("BllPath");
					this.OnBllPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModelSuffix", DbType="NVarChar(50)")]
		public string ModelSuffix
		{
			get
			{
				return this._ModelSuffix;
			}
			set
			{
				if ((this._ModelSuffix != value))
				{
					this.OnModelSuffixChanging(value);
					this.SendPropertyChanging();
					this._ModelSuffix = value;
					this.SendPropertyChanged("ModelSuffix");
					this.OnModelSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DalSuffix", DbType="NVarChar(50)")]
		public string DalSuffix
		{
			get
			{
				return this._DalSuffix;
			}
			set
			{
				if ((this._DalSuffix != value))
				{
					this.OnDalSuffixChanging(value);
					this.SendPropertyChanging();
					this._DalSuffix = value;
					this.SendPropertyChanged("DalSuffix");
					this.OnDalSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BllSuffix", DbType="NVarChar(50)")]
		public string BllSuffix
		{
			get
			{
				return this._BllSuffix;
			}
			set
			{
				if ((this._BllSuffix != value))
				{
					this.OnBllSuffixChanging(value);
					this.SendPropertyChanging();
					this._BllSuffix = value;
					this.SendPropertyChanged("BllSuffix");
					this.OnBllSuffixChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
